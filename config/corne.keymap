/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E             &kp R         &kp T          &kp Y        &kp U    &kp I      &kp O    &kp P     &kp BACKSPACE
&kp CAPSLOCK  &kp A  &kp S  &kp D             &kp F         &kp G          &kp H        &kp J    &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT     &kp Z  &kp X  &kp C             &kp V         &kp B          &kp N        &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp ESCAPE
                            &kp LEFT_CONTROL  &kp LEFT_WIN  &lt 1 SPACE    &lt 2 ENTER  &kp DEL  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6                &kp N7                 &kp N8          &kp N9           &kp N0     &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PLUS   &kp EQUAL
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans          &trans           &kp MINUS  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET               &trans                 &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL         &kp AT           &kp HASH          &kp DLLR         &kp PRCNT          &kp CARET  &kp PAGE_UP    &kp UP_ARROW  &kp LPAR   &kp RPAR  &kp BSPC
&kp LCTRL  &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI   &rgb_ug RGB_EFR  &rgb_ug RGB_EFF    &kp MINUS  &kp LEFT       &kp DOWN      &kp RIGHT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans           &trans           &trans            &trans           &trans             &kp UNDER  &kp PAGE_DOWN  &kp LBRC      &kp RBRC   &kp PIPE  &kp TILDE
                                             &kp LEFT_CONTROL  &trans           &kp SPACE          &kp RET    &trans         &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
